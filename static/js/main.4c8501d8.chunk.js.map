{"version":3,"sources":["index.js"],"names":["Square","props","className","isWinnig","onClick","value","Board","i","this","squares","isWinnigSquares","includes","n","push","renderSquare","renderSquares","renderRows","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","isDescending","slice","length","calculateWinner","setState","concat","location","step","status","current","winner","moves","map","move","desc","jumpTo","player","line","handleClick","sortHistory","reverse","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c8501d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button className={\"square \" + (props.isWinnig ? \"winner\" : null)}\r\n        onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n    renderSquare(i) {\r\n      return (\r\n        <Square\r\n          value={this.props.squares[i]}\r\n          onClick={() => this.props.onClick(i)}\r\n          isWinnig={this.props.isWinnigSquares.includes(i)}\r\n          key={\"square \"+ i}\r\n        />\r\n      );\r\n    }\r\n    renderSquares(n) {\r\n        let squares = [];\r\n        for (let i = n; i < n + 3; i++) {\r\n          squares.push(this.renderSquare(i));\r\n        }\r\n        return squares;\r\n      }\r\n    \r\n    renderRows(i) {\r\n        return <div className=\"board-row\">{this.renderSquares(i)}</div>;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n            {this.renderRows(0)}\r\n            {this.renderRows(3)}\r\n            {this.renderRows(6)}\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        history: [{\r\n          squares: Array(9).fill(null)\r\n        }],\r\n        xIsNext: true,\r\n        stepNumber: 0,\r\n        isDescending: true\r\n      };\r\n    }\r\n  \r\n    handleClick(i) {\r\n      const locations = [\r\n          [1, 1],\r\n          [1, 2],\r\n          [1, 3],\r\n          [2, 1],\r\n          [2, 2],\r\n          [2, 3],\r\n          [3, 1],\r\n          [3, 2],\r\n          [3, 3]\r\n      ]\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n      this.setState({\r\n        history: history.concat([{\r\n          squares: squares,\r\n          location: locations[i]\r\n\r\n        }]),\r\n        xIsNext: !this.state.xIsNext,\r\n        stepNumber: history.length\r\n      });\r\n    }\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    sortHistory(){\r\n        this.setState({\r\n            isDescending: !this.state.isDescending\r\n        });\r\n    }\r\n    \r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n\r\n      const moves = history.map((step, move) => {\r\n          const desc = move \r\n            ? \"Go to move #\" + move + \" @ \" + history[move].location\r\n            : \"Go to game start\";\r\n          return(\r\n              <li key={move}>\r\n                  <button onClick={() => this.jumpTo(move)}>\r\n                    {move === this.state.stepNumber ? <b>{desc}</b> : desc}\r\n                  </button>\r\n              </li>\r\n          );\r\n\r\n      });\r\n  \r\n      let status;\r\n\r\n\r\n      if (winner) {\r\n        status = `Winner:  ${winner.player} @ ${winner.line}`;\r\n      } else if(!current.squares.includes(null)) {\r\n        status = \"The Game has ended in a draw\";\r\n      } else {\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n  \r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board\r\n              squares={current.squares}\r\n              onClick={(i) => this.handleClick(i)}\r\n              isWinnigSquares={winner ? winner.line : []}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <button onClick={() => this.sortHistory()}>\r\n                Sort by: {this.state.isDescending ? \"Descending\" : \"Ascending\"}\r\n            </button>\r\n            <ol>{this.state.isDescending ? moves : moves.reverse()}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\r\n        return { player: squares[a], line: [a, b, c] };\r\n        }\r\n    }\r\n    return null;\r\n  }\r\n"],"sourceRoot":""}